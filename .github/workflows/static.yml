# Simple workflow for deploying static content to GitHub Pages
name: Deploy and validate static web-pages.
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  validate_code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        #HTML validation
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
      # Install dependencies
      - name: Install dependencies
        run: |
          touch css-validation-report.txt
          touch html-validation-report.txt
          npm install -g html-validate
          npm install -g stylelint stylelint-config-
          sudo apt-get update && sudo apt-get install -y pandoc
      # Validate HTML
      - name: Validate HTML
        run: |
            html-validate "**/*.html" > html-validation-report.txt
            if [ $? -ne 0 ]; then
              echo "::error::HTML validation failed"
              exit 1
            fi
      # Validate CSS
      - name: Validate CSS
        run: |
          echo '{ "extends": "stylelint-config-recommended" }' > .stylelintrc.json
          stylelint **/*.css > css-validation-report.txt

    # Convert validation reports to HTML format
      - name: Convert to HTML
        if: always()
        run: |
          pandoc -f markdown -t html html-validation-report.txt -o html-validation-report.html
          pandoc -f markdown -t html css-validation-report.txt -o css-validation-report.html
     # Create artifacts containing files of issues
      - name: Create artifacts
        if: always()  # Ensure the step always runs
        uses: actions/upload-artifact@v2
        with:
          name: validation-reports
          path: |
            html-validation-report.html
            css-validation-report.html
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: validate_code
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
